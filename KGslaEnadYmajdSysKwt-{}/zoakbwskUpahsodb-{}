
local accountId = 1030614
local Player = game:GetService("Players")
local allowPassThrough = false; -- Allow user through if error occurs, may reduce security
local allowKeyRedeeming = false; -- Automatically check keys to redeem if valid
local useDataModel = false;
local fRequest, fStringFormat, fSpawn, fWait = request or http.request or http_request or syn.request, string.format, task.spawn, task.wait;
local localPlayerId = game:GetService("Players").LocalPlayer.UserId;
local rateLimit, rateLimitCountdown, errorWait = false, 0, false;
local SavedKeyV = ""

function getLink()
    return fStringFormat("https://gateway.platoboost.com/a/%i?id=%i", accountId, localPlayerId);
end;

function verify(key)
    if errorWait or rateLimit then 
        return false;
    end;

    onMessage("Checking key...");

    if (useDataModel) then
        local status, result = pcall(function() 
            return game:HttpGetAsync(fStringFormat("https://api-gateway.platoboost.com/v1/public/whitelist/%i/%i?key=%s", accountId, localPlayerId, key));
        end);
        
        if status then
            if string.find(result, "true") then
                onMessage("Successfully whitelisted!");
                return true;
            elseif string.find(result, "false") then
                if allowKeyRedeeming then
                    local status1, result1 = pcall(function()
                        return game:HttpPostAsync(fStringFormat("https://api-gateway.platoboost.com/v1/authenticators/redeem/%i/%i/%s", accountId, localPlayerId, key), {});
                    end);

                    if status1 then
                        if string.find(result1, "true") then
                            onMessage("Successfully redeemed key!");
                            return true;
                        end;
                    end;
                end;
                
                onMessage("Key is invalid!");
                return false;
            else
                return false;
            end;
        else
            onMessage("An error occured while contacting the server!");
            return allowPassThrough;
        end;
    else
        local status, result = pcall(function() 
            return fRequest({
                Url = fStringFormat("https://api-gateway.platoboost.com/v1/public/whitelist/%i/%i?key=%s", accountId, localPlayerId, key),
                Method = "GET"
            });
        end);

        if status then
            if result.StatusCode == 200 then
                if string.find(result.Body, "true") then
                    onMessage("Successfully whitelisted key!");
                    return true;
                else
                    if (allowKeyRedeeming) then
                        local status1, result1 = pcall(function() 
                            return fRequest({
                                Url = fStringFormat("https://api-gateway.platoboost.com/v1/authenticators/redeem/%i/%i/%s", accountId, localPlayerId, key),
                                Method = "POST"
                            });
                        end);

                        if status1 then
                            if result1.StatusCode == 200 then
                                if string.find(result1.Body, "true") then
                                    onMessage("Successfully redeemed key!");
                                    return true;
                                end;
                            end;
                        end;
                    end;
                    
                    return false;
                end;
            elseif result.StatusCode == 204 then
                onMessage("Account wasn't found, check accountId");
                return false;
            elseif result.StatusCode == 429 then
                if not rateLimit then 
                    rateLimit = true;
                    rateLimitCountdown = 10;
                    fSpawn(function() 
                        while rateLimit do
                            onMessage(fStringFormat("You are being rate-limited, please slow down. Try again in %i second(s).", rateLimitCountdown));
                            fWait(1);
                            rateLimitCountdown = rateLimitCountdown - 1;
                            if rateLimitCountdown < 0 then
                                rateLimit = false;
                                rateLimitCountdown = 0;
                                onMessage("Rate limit is over, please try again.");
                            end;
                        end;
                    end); 
                end;
            else
                return allowPassThrough;
            end;    
        else
            return allowPassThrough;
        end;
    end;
end;

onMessage = function(message)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Key System Status",
        Text = message
    })
end

local keyFileName = "UnknownHubXUniversal/KeyHub.txt"

-- Function to save the correct key to a file
local function saveKeyToFile(key)
    writefile(keyFileName, key)
end

local function runloadstring()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/NyekPlohsbxladheyp/GcHakbdlabslrje/refs/heads/Skhsfobsfh/Skbdoabcetere-%7B%7D/Zuakbdkabx-%7B%7D'))()
end

-- Create GUI

local function MakeDraggable(topbarobject, object)
    local Dragging = nil
    local DragInput = nil
    local DragStart = nil
    local StartPosition = nil
    
    local function Update(input)
        local Delta = input.Position - DragStart
        local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
        local Tween = TweenService:Create(object, TweenInfo.new(0.15), {
            Position = pos
        })
        Tween:Play()
    end
    
    topbarobject.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStart = input.Position
                StartPosition = object.Position
                
                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            Dragging = false
                        end
                    end
                )
            end
        end
    )
    
    topbarobject.InputChanged:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                DragInput = input
            end
        end
    )
    
    UserInputService.InputChanged:Connect(
        function(input)
            if input == DragInput and Dragging then
                Update(input)
            end
        end
    )
end

local playergui = game:GetService("Players").LocalPlayer.PlayerGui or game.Players.LocalPlayer.PlayerGui
local gui = Instance.new("ScreenGui")
gui.Parent = playergui
gui.ResetOnSpawn = false -- Prevents the GUI from resetting on spawn

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.4, 0, 0.4, 0) -- Increase size
frame.Position = UDim2.new(0.5, 0, 0.1, 0) -- Adjust position
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Change background color to black
frame.BorderSizePixel = 0 -- Remove border
frame.Parent = gui
frame.ClipsDescendants = true -- Clip children within the frame boundaries

local mainCorner = Instance.new("UICorner") -- Make the frame corners round
mainCorner.CornerRadius = UDim.new(0.1, 0)
mainCorner.Parent = frame

local nameLabel = Instance.new("TextLabel")
nameLabel.Size = UDim2.new(1, 0, 0.2, 0) -- Increase size
nameLabel.Position = UDim2.new(0, 0, 0, 0)
nameLabel.Text = "Unknown Hub X Key System"
nameLabel.Font = Enum.Font.SourceSansBold -- Change font to SourceSansBold
nameLabel.TextColor3 = Color3.new(1, 1, 1) -- Change text color to white
nameLabel.TextStrokeTransparency = 0 -- Show text outline
nameLabel.TextStrokeColor3 = Color3.new(1, 0, 0) -- Set text outline color to red
nameLabel.TextScaled = true -- Enable text scaling
nameLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Change background color to black
nameLabel.Parent = frame

local textBox = Instance.new("TextBox")
textBox.Size = UDim2.new(0.8, 0, 0.2, 0)
textBox.Position = UDim2.new(0.1, 0, 0.3, 0) -- Adjust position
textBox.PlaceholderText = "Enter key"
textBox.Font = Enum.Font.SourceSansBold -- Change font to SourceSansBold
textBox.TextColor3 = Color3.new(1, 1, 1) -- Change text color to white
textBox.TextStrokeTransparency = 0 -- Show text outline
textBox.TextStrokeColor3 = Color3.new(1, 0, 0) -- Set text outline color to red
textBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Change background color to black
textBox.Parent = frame

local checkButton = Instance.new("TextButton")
checkButton.Size = UDim2.new(0.3, 0, 0.1, 0)
checkButton.Position = UDim2.new(0.1, 0, 0.6, 0) -- Adjust position
checkButton.Text = "Check Key"
checkButton.Font = Enum.Font.SourceSansBold -- Change font to SourceSansBold
checkButton.TextColor3 = Color3.new(1, 1, 1) -- Change text color to white
checkButton.TextStrokeTransparency = 0 -- Show text outline
checkButton.TextStrokeColor3 = Color3.new(1, 0, 0) -- Set text outline color to red
checkButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Change background color to white
checkButton.Parent = frame

local getKeyButton = Instance.new("TextButton")
getKeyButton.Size = UDim2.new(0.3, 0, 0.1, 0)
getKeyButton.Position = UDim2.new(0.6, 0, 0.6, 0) -- Adjust position
getKeyButton.Text = "Get Key"
getKeyButton.Font = Enum.Font.SourceSansBold -- Change font to SourceSansBold
getKeyButton.TextColor3 = Color3.new(1, 1, 1) -- Change text color to white
getKeyButton.TextStrokeTransparency = 0 -- Show text outline
getKeyButton.TextStrokeColor3 = Color3.new(1, 0, 0) -- Set text outline color to red
getKeyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Change background color to white
getKeyButton.Parent = frame

local icon = Instance.new("ImageLabel")
icon.Size = UDim2.new(0.1, 0, 0.2, 0) -- Set bigger size
icon.Position = UDim2.new(0.65, 0, -0.1, 0) -- Adjust position
icon.Image = "rbxassetid://73949062338801" -- Set icon asset id
icon.Parent = frame

-- Function to handle correct key
local function correctKeyFunction()
    game.StarterGui:SetCore("SendNotification", {
        Title = "Key System Status",
        Text = "Welcome To the Unknown Hub X",
        Duration = 20
    })
    runloadstring()
    wait(1) 
    destroyGui()
end

-- Function to handle incorrect key
local function incorrectKeyFunction()
    print("Key is incorrect!")
end

-- Function to destroy GUI
function destroyGui()
    gui:Destroy()
end

local function checkKey()
    local key = textBox.Text
    local success = verify(key);
    
   if success then
        saveKeyToFile(key);
        correctKeyFunction()
    else
        incorrectKeyFunction()
    end
end

checkButton.MouseButton1Click:Connect(checkKey)

-- Function to get key and set to clipboard
getKeyButton.MouseButton1Click:Connect(function()
    getLink()
    game.StarterGui:SetCore("SendNotification", {
        Title = "Key System Status",
        Text = "Key copied to clipboard!",
        Duration = 10
    })
end)

local function checkKeyFromFile()
    if isfile(keyFileName) then
        local getkey = readfile(keyFileName)
        local success = verify(getkey)
        if success then
            correctKeyFunction()
        end
    end
end

checkKeyFromFile()
